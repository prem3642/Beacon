# -*- coding: utf-8 -*-
# Generated by Django 2.2.10 on 2020-03-03 12:26

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("questionnaire", "0028_question_show_safety_screen"),
    ]

    operations = [
        migrations.CreateModel(
            name="IntakeQuestionTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="template name"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Is this template default"
                    ),
                ),
                (
                    "show_safety_screen",
                    models.BooleanField(
                        default=False, verbose_name="Show Safety Screen"
                    ),
                ),
            ],
            options={
                "verbose_name": "question template",
                "db_table": "question_template",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="TemplateQuestionMapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "next_question_service",
                    models.CharField(
                        blank=True,
                        help_text="Service to get the next question instead of direct link",
                        max_length=20,
                        null=True,
                        verbose_name="Service name",
                    ),
                ),
                (
                    "previous_question_service",
                    models.CharField(
                        blank=True,
                        help_text="Service to get the previous question",
                        max_length=20,
                        null=True,
                        verbose_name="Service name",
                    ),
                ),
            ],
            options={
                "verbose_name": "template question mapping",
                "db_table": "template_question_mapping",
                "ordering": ["created_at"],
            },
        ),
        migrations.AlterField(
            model_name="question",
            name="kind",
            field=models.CharField(
                choices=[
                    ("dropdown", "Dropdown"),
                    ("checkbox", "Checkbox"),
                    ("radio", "Radio"),
                    ("number", "Number"),
                    ("text", "Text"),
                    ("text_box", "Text Box"),
                    ("yes_no", "Yes/No"),
                    ("yes_no_options", "Yes/No Options"),
                    ("terminal", "Terminal"),
                    ("multiple_questions", "Multiple Questions"),
                    ("regex", "Regex"),
                    ("date", "Date"),
                    ("organisation", "Organisation"),
                    ("frontend", "Frontend"),
                ],
                max_length=20,
                verbose_name="Type",
            ),
        ),
        migrations.AlterField(
            model_name="question",
            name="user_response_attribute",
            field=models.CharField(
                blank=True,
                choices=[
                    ("emotional_support_for", "emotional_support_for"),
                    ("appointment_state", "appointment_state"),
                    ("chief_complaint1", "chief_complaint1"),
                    ("chief_complaint2", "chief_complaint2"),
                    ("self_harm", "self_harm"),
                    ("safety_sensitive_position", "safety_sensitive_position"),
                    ("how_often_depressed", "how_often_depressed"),
                    ("how_often_nervous", "how_often_nervous"),
                    ("how_often_worry", "how_often_worry"),
                    (
                        "difficulty_in_keeping_drinking_limit",
                        "difficulty_in_keeping_drinking_limit",
                    ),
                    ("felt_cut_down_drinking", "felt_cut_down_drinking"),
                    ("how_emotionally_doing", "how_emotionally_doing"),
                    ("how_physical_health", "how_physical_health"),
                    (
                        "comfortable_in_managing_finances",
                        "comfortable_in_managing_finances",
                    ),
                    ("people_support", "people_support"),
                    ("resources_to_manage", "resources_to_manage"),
                    (
                        "number_of_days_less_productive",
                        "number_of_days_less_productive",
                    ),
                    ("number_of_days_missed_work", "number_of_days_missed_work"),
                    ("is_employee", "is_employee"),
                    ("relationship_with_employee", "relationship_with_employee"),
                    ("employee_name", "employee_name"),
                    ("employee_birth_date", "employee_birth_date"),
                    ("employee_organisation_id", "employee_organisation_id"),
                ],
                max_length=50,
                null=True,
                verbose_name="User Response Attribute",
            ),
        ),
        migrations.DeleteModel(
            name="OrganisationNextQuestion",
        ),
        migrations.AddField(
            model_name="templatequestionmapping",
            name="next_question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="parent_question_mapping",
                to="questionnaire.Question",
            ),
        ),
        migrations.AddField(
            model_name="templatequestionmapping",
            name="option",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="next_question_mapping",
                to="questionnaire.Option",
            ),
        ),
        migrations.AddField(
            model_name="templatequestionmapping",
            name="previous_question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children_question_mapping",
                to="questionnaire.Question",
            ),
        ),
        migrations.AddField(
            model_name="templatequestionmapping",
            name="question",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="next_question_mapping",
                to="questionnaire.Question",
            ),
        ),
        migrations.AddField(
            model_name="templatequestionmapping",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions_mapping",
                to="questionnaire.IntakeQuestionTemplate",
            ),
        ),
    ]
